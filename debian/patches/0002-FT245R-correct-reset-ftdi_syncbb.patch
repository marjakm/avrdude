From: =?utf-8?q?Daniel_Rozsny=C3=B3?= <daniel@rozsnyo.com>
Date: Sun, 22 Sep 2013 20:18:35 +0200
Subject: FT245R correct reset (ftdi_syncbb)

https://lists.nongnu.org/archive/html/avrdude-dev/2013-09/msg00162.html
http://savannah.nongnu.org/bugs/?40086
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=760764
---
 ft245r.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/ft245r.c b/ft245r.c
index 5a85d7e..4f271a8 100644
--- a/ft245r.c
+++ b/ft245r.c
@@ -297,6 +297,10 @@ static int set_pin(PROGRAMMER * pgm, int pinname, int val) {
     return 0;
 }
 
+static int set_sck(PROGRAMMER * pgm, int value) {
+    return set_pin(pgm, PIN_AVR_SCK, value);
+}
+
 static int set_reset(PROGRAMMER * pgm, int value) {
     return set_pin(pgm, PIN_AVR_RESET, value);
 }
@@ -419,6 +423,12 @@ static int ft245r_program_enable(PROGRAMMER * pgm, AVRPART * p) {
  */
 static int ft245r_initialize(PROGRAMMER * pgm, AVRPART * p) {
 
+    /* Apply power between VCC and GND while RESET and SCK are set to “0”. In some systems,
+     * the programmer can not guarantee that SCK is held low during power-up. In this
+     * case, RESET must be given a positive pulse of at least two CPU clock cycles duration
+     * after SCK has been set to “0”.
+     */
+    set_sck(pgm, OFF);
     ft245r_powerup(pgm);
 
     set_reset(pgm, OFF);
@@ -426,7 +436,11 @@ static int ft245r_initialize(PROGRAMMER * pgm, AVRPART * p) {
     set_reset(pgm, ON);
     usleep(5000); // 5ms
     set_reset(pgm, OFF);
-    usleep(5000); // 5ms
+
+    /* Wait for at least 20 ms and enable serial programming by sending the Programming
+     * Enable serial instruction to pin MOSI.
+     */
+    usleep(20000); // 20ms
 
     return ft245r_program_enable(pgm, p);
 }
